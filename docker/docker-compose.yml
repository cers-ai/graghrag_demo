version: '3.8'

services:
  # Neo4j图数据库
  neo4j:
    image: neo4j:5.15-community
    container_name: graphrag-demo-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      # 设置初始密码
      NEO4J_AUTH: neo4j/graghrag123
      # 配置内存
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 512m
      # 启用APOC插件
      NEO4J_PLUGINS: '["apoc"]'
      # 安全配置
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      # 日志配置
      NEO4J_dbms_logs_debug_level: INFO
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./neo4j/conf:/var/lib/neo4j/conf
    networks:
      - graphrag-demo-network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p graghrag123 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Ollama AI服务 - 使用本地服务，不容器化

  # 后端API服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: graphrag-demo-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_AUTH=neo4j/graghrag123
      - NEO4J_DATABASE=neo4j
      - OLLAMA_HOST=http://host.docker.internal:11434
      - OLLAMA_MODEL=qwen3:4b
    volumes:
      - ../config:/app/config:ro
      - backend_uploads:/app/uploads
    networks:
      - graphrag-demo-network
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # 前端Web服务
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: graphrag-demo-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - graphrag-demo-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  backend_uploads:
    driver: local

networks:
  graphrag-demo-network:
    driver: bridge
